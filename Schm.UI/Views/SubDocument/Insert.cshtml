@using Schm.Domain.Model
@model List<Item>

@{
    if (ViewData["IsFinal"].ToString() == "False")
    {
        <div class="row">
            <div class="col-md-12">

                <div class="card">
                    <div class="card-body">
                        <h6 class="card-title">ثبت کالا برای سند </h6>
                        <div>
                            <div class="row">
                                <div class="col-md-3 col-sm-12 col-lg-6">
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">کالا  </label>
                                        <select class="form-control" name="selectedItem" id="selectedItem">
                                            <option value="0"> انتخاب کنید ...  </option>
                                            @{
                                                foreach (var item in Model)
                                                {
                                                    <option value="@item.Id"> @item.Title </option>
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-3 col-sm-6 col-lg-3">
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">تعداد </label>
                                        <input type="text" data-type="seperatedNumber" class="form-control text-left" id="count" placeholder="تعداد">
                                    </div>
                                </div>
                                <div class="col-md-4 col-sm-6 col-lg-3">
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">قیمت (ریال)</label>
                                        <input type="text" data-type="seperatedNumber" class="form-control text-left" id="price" placeholder="قیمت ">
                                    </div>
                                </div>
                            </div>
                            <a class="btn btn-primary float-left" onclick="insert()">ثبت </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}

<div class="card" id="Grid">
    <div class="card-body">
        <table id="CategoryGridDynamic" class="table table-striped table-bordered" width="100%">
            <thead>
                <tr>
                    <th>نام کالا </th>
                    <th>قیمت (ریال)</th>
                    <th>تعداد</th>
                    <th> حذف </th>
                </tr>
            </thead>
        </table>
        <br />
        <hr />
        <br />
        @{
            if (ViewData["IsFinal"].ToString() == "False")
            {
                <a class="btn btn-block" onclick="finalDoc()" style="background:green;color:white;">نهایی شود . . .</a>
            }
        }
    </div>
</div>



<script src="~/lib/jquery/dist/jquery.min.js"></script>


<script>
    var table;

    $(document).ready(function () {
        var table = $("#CategoryGridDynamic").DataTable({
            processing: true,
            serverSide: true,
            language: {
                "sEmptyTable": "هیچ داده ای در جدول وجود ندارد",
                "sInfo": "نمایش _START_ تا _END_ از _TOTAL_ رکورد",
                "sInfoEmpty": "نمایش 0 تا 0 از 0 رکورد",
                "sInfoFiltered": "(فیلتر شده از _MAX_ رکورد)",
                "sInfoPostFix": "",
                "sInfoThousands": ",",
                "sLengthMenu": "نمایش _MENU_ رکورد",
                "sLoadingRecords": "در حال بارگزاری...",
                "sProcessing": "در حال دریافت ...",
                "sSearch": "جستجو:",
                "sZeroRecords": "رکوردی با این مشخصات پیدا نشد",
                "oPaginate": {
                    "sFirst": "ابتدا",
                    "sLast": "انتها",
                    "sNext": "بعدی",
                    "sPrevious": "قبلی"
                },
                "oAria": {
                    "sSortAscending": ": فعال سازی نمایش به صورت صعودی",
                    "sSortDescending": ": فعال سازی نمایش به صورت نزولی"
                }
            },
            ajax: {
                "url": "/SubDocument/Search?documentId=@Context.Request.Query["documentId"]",
                "type": "Post",
                "datatype": "json"
            },
            columns: [
                { "data": "title", "name": "نام کالا" },
                {
                    "data": "price", "name": "قیمت  ",
                    "render": function (data, type, row) {
                        return formatNumber(data);
                    }
                },
                {
                    "data": "count", "name": "تعداد ",
                    "render": function (data, type, row) {
                        return formatNumber(data);
                    }
                },
                {
                    "render": function (data, type, row) { return "<a class='btn' title='حذف' onclick='deleteitem(" + row.id + ")'><i class='fa fa-remove' style='color: red;'></i></a> "; }
                },
            ]
        });
    });

    function insert() {
        toastr.options = {
            timeOut: 3000,
            progressBar: true,
            showMethod: "slideDown",
            hideMethod: "slideUp",
            showDuration: 200,
            hideDuration: 200
        };


        var price = $('#price').val().replace(",", "");
        var count = $('#count').val().replace(",", "");
        var e = document.getElementById("selectedItem");
        var selecteditem = e.value;

        if (selecteditem == "0" || selecteditem == "") { toastr.error("کالا انتخاب نشده است"); return; }


        if (price == "") { toastr.error("قیمت انتخاب نشده است"); return; }
        if (count == "") { toastr.error("تعداد انتخاب نشده است"); return; }

        $.ajax({
            url: '/SubDocument/Insert?documentId=@Context.Request.Query["documentId"]&supplierId=@Context.Request.Query["supplierId"]&ItemId=' + selecteditem + '&price=' + price + '&count=' + count,
            type: 'POST',
            dataType: 'json',
            success: function (data) {
                if (data.status) {
                    toastr.success(data.message);
                    window.location.href = '/SubDocument/Insert?supplierId=@Context.Request.Query["supplierId"]&documentId=@Context.Request.Query["documentId"]&docType=@Context.Request.Query["docType"]';
                } else {
                    toastr.error(data.message);
                }
            },
            error: function (xhr, textStatus, errorThrown) {
                console.log('Error in Operation');
            }
        });
    }

    function deleteitem(id) {
        swal({
            title: "آیا اطمینان دارید؟",
            text: "پس از حذف قادر به بازیابی اطلاعات نخواهید بود!",
            icon: "warning",
            buttons: {
                confirm: 'بله',
                cancel: 'خیر'
            },
            dangerMode: true
        })
            .then(function (willDelete) {
                if (willDelete) {
                    $.ajax({
                        url: '/SubDocument/Delete?id=' + id,
                        type: 'POST',
                        dataType: 'json',
                        success: function (data) {
                            if (data.status) {
                                toastr.success(data.message);
                                Search();
                            } else {
                                toastr.error(data.message);
                            }
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            console.log('Error in Operation');
                        }
                    });
                }
            });
    }

    function Search() {
        $("#CategoryGridDynamic").DataTable().ajax.reload();
         table.draw();
    }

    function finalDoc() {
        $.ajax({
                        url: '/Document/Final?id=@Context.Request.Query["documentId"]',
                        type: 'POST',
                        dataType: 'json',
                        success: function (data) {
                                     if(data.status){
                                         toastr.success(data.message);
                                         if(@Context.Request.Query["docType"]==1){
                                             window.location.href= '/Document/EnterDoc?supplierId=@Context.Request.Query["supplierId"]';
                                         }else{
                                             window.location.href= '/Document/ExitDoc?supplierId=@Context.Request.Query["supplierId"]';
                                         }
                                         
                                     }else{
                                         toastr.error(data.message);
                                     }
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            console.log('Error in Operation');
                        }
                  });
    }

    function formatNumber(n) {
        // format number 1000000 to 1,234,567
        return n.toString().replace('.', '').replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",")
    }
</script>